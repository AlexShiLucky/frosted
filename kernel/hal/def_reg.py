#!/usr/bin/python2
import sys, os

c_file = open("hal/regs.c", "w")
h_file = open("hal/regs.h", "w")


c_file.write( '/* regs.c is AUTOGENERATED. Do not edit. Change *.def instead. */\n' )
c_file.write("\n")
c_file.write( '#include "tools.h"\n')
c_file.write("\n")
c_file.write("\n")

h_file.write( '/* regs.h is AUTOGENERATED. Do not edit. Change *.def instead. */\n' )
h_file.write( '#include <stdint.h>\n' )
h_file.write( '#ifndef SYS_REG_DEF_INCLUDED\n' )
h_file.write( '#define SYS_REG_DEF_INCLUDED\n' )
for filen in sys.argv[1:]:
    f = open(filen)

    c_file.write( "/****************************************************************\n" )
    c_file.write( " * File: %s\n" % filen )
    c_file.write( " ****************************************************************/\n" )

    for l in f:
        if len(l) > 0:
            if l.startswith('#'):
                continue
            arr = l.split()
            if (len(arr) > 2):
                name = arr[0]
                base = arr[1]
                size = arr[2]
            else:
                continue
            if (len(arr) > 4):
                desc = ' '.join(arr[3:])
            c_file.write( "/* %s - base addr: %s - len: %s */\n" % (desc, base, size) )
            if int(size) == 1:
                c_file.write( "DEF_REG(%s, 0x%08X);\n" % (name, int(base, 16)) )
                h_file.write( "extern  uint32_t * const SYSREG_%s;\n" %name );
            else:
                for i in range(int(size)):
                    c_file.write( "DEF_REG(%s%d, 0x%08X);\n" % (name, i, int(base, 16) + (i * 4)) )
                    h_file.write( "extern  uint32_t * const SYSREG_%s%d;\n" %(name,i) );
                h_file.write("#define SYSREG_%s(x) ((uint32_t *)(((uint32_t *)(SYSREG_%s0)) + ((x))))\n\n" % (name, name));
            c_file.write("\n")

h_file.write( '#endif\n' )
